import numpy as np
from submit import my_fit
from submit import my_predict
import time as tm
import pickle
import os

R = 64
S = 4

Z_trn = np.loadtxt( "secret_train.dat" )
Z_tst = np.loadtxt( "secret_test.dat" )

n_trials = 5

t_train = 0
m_size = 0
t_test = 0
acc = 0

for t in range( n_trials ):
	tic = tm.perf_counter()
	model = my_fit( Z_trn )
	toc = tm.perf_counter()
	t_train += toc - tic

	with open( f"model_dump_{t}.pkl", "wb" ) as outfile:
		pickle.dump( model, outfile, protocol=pickle.HIGHEST_PROTOCOL )
	
	m_size += os.path.getsize( f"model_dump_{t}.pkl" )
	
	tic = tm.perf_counter()
	pred = my_predict( Z_tst[:, :-1], model )
	toc = tm.perf_counter()
	t_test += toc - tic
	
	acc += np.average( Z_tst[ :, -1 ] == pred )

t_train /= n_trials
t_test /= n_trials
m_size /= n_trials
acc /= n_trials

print("Training time: ", t_train)
print("Testing time: ", t_test)
print("Memory: ", m_size)
print("Accuracy: ", acc )
